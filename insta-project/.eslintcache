[{"D:\\GitRepo\\InstaProject\\insta-project\\src\\index.js":"1","D:\\GitRepo\\InstaProject\\insta-project\\src\\App.js":"2","D:\\GitRepo\\InstaProject\\insta-project\\src\\reportWebVitals.js":"3","D:\\GitRepo\\InstaProject\\insta-project\\src\\components.js":"4","D:\\GitRepo\\InstaProject\\insta-project\\src\\base.js":"5","D:\\GitRepo\\InstaProject\\insta-project\\src\\header.js":"6","D:\\GitRepo\\InstaProject\\insta-project\\src\\drop-zone.js":"7","D:\\GitRepo\\InstaProject\\insta-project\\src\\drag-n-drop.js":"8","D:\\GitRepo\\InstaProject\\insta-project\\src\\downloader.js":"9","D:\\GitRepo\\InstaProject\\insta-project\\src\\Drag-n-drop.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":289,"mtime":1609270195574,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1979,"mtime":1609269721096,"results":"15","hashOfConfig":"12"},{"size":630,"mtime":1602192901430,"results":"16","hashOfConfig":"12"},{"size":453,"mtime":1609270576729,"results":"17","hashOfConfig":"12"},{"size":725,"mtime":1602437825339,"results":"18","hashOfConfig":"12"},{"size":5108,"mtime":1609269761420,"results":"19","hashOfConfig":"12"},{"size":332,"mtime":1601324509766,"results":"20","hashOfConfig":"12"},{"size":5132,"mtime":1609269406372,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1915ex1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"D:\\GitRepo\\InstaProject\\insta-project\\src\\index.js",[],["47","48"],"D:\\GitRepo\\InstaProject\\insta-project\\src\\App.js",[],"D:\\GitRepo\\InstaProject\\insta-project\\src\\reportWebVitals.js",[],"D:\\GitRepo\\InstaProject\\insta-project\\src\\components.js",[],"D:\\GitRepo\\InstaProject\\insta-project\\src\\base.js",[],"D:\\GitRepo\\InstaProject\\insta-project\\src\\header.js",[],"D:\\GitRepo\\InstaProject\\insta-project\\src\\drop-zone.js",["49"],"import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nfunction MyDropzone(props) {\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        const urls = acceptedFiles.map(file => window.URL.createObjectURL(file));\r\n        props.onFile(urls);\r\n    }, []);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n    return (\r\n\r\n        <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {\r\n                isDragActive ?\r\n                    <p>Drop the files here ...</p> :\r\n                    <p>Drag 'n' drop some files here, or click to select files</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyDropzone;","D:\\GitRepo\\InstaProject\\insta-project\\src\\drag-n-drop.js",["50","51"],"D:\\GitRepo\\InstaProject\\insta-project\\src\\downloader.js",["52","53"],"import React, {Component} from \"react\";\r\n\r\nvar saveBlob = function (url, fileName) {\r\n    var a = document.createElement(\"a\");\r\n    document.body.appendChild(a);\r\n    a.style = \"display: none\";\r\n    a.href = url;\r\n    a.download = fileName;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n};\r\n\r\nexport default saveBlob;\r\n\r\n\r\n","D:\\GitRepo\\InstaProject\\insta-project\\src\\Drag-n-drop.js",["54","55","56"],"import React, {useState, useRef, useEffect, useLayoutEffect} from 'react'\r\nimport saveBlob from \"./downloader\";\r\n\r\n\r\nexport const windowSize =  ()=> {\r\n    const [size, setSize] = useState(0);\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            setSize([window.innerWidth]);\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    console.log(size);\r\n}\r\n\r\nfunction DragNDrop({data, fileList, resetDb}) {\r\n    const [list, setList] = useState(data);\r\n    const [dragging, setDragging] = useState(false);\r\n    const [items, setItems] = useState([])\r\n\r\n\r\n    React.useEffect(() => {\r\n        setItems(fileList);\r\n    }, [fileList.length]);\r\n\r\n    useEffect(() => {\r\n        setList(data);\r\n    }, [setList, data])\r\n\r\n    const dragItem = useRef();\r\n    const dragItemNode = useRef();\r\n\r\n    const handletDragStart = (e, item) => {\r\n        console.log('Starting to drag', item)\r\n        dragItemNode.current = e.target;\r\n        dragItemNode.current.addEventListener('dragend', handleDragEnd)\r\n        dragItem.current = item;\r\n\r\n        setTimeout(() => {\r\n            setDragging(true);\r\n        }, 0)\r\n    }\r\n    const handleDragEnter = (e, targetItem) => {\r\n        console.log('Entering a drag target', targetItem)\r\n        if (dragItemNode.current !== e.target) {\r\n            console.log('Target is NOT the same as dragged item')\r\n            setList(oldList => {\r\n                let newList = JSON.parse(JSON.stringify(oldList))\r\n                newList[targetItem.grpI].items.splice(targetItem.itemI, 0, newList[dragItem.current.grpI].items.splice(dragItem.current.itemI, 1)[0])\r\n                dragItem.current = targetItem;\r\n                localStorage.setItem('List', JSON.stringify(newList));\r\n                return newList\r\n            })\r\n        }\r\n    }\r\n    const handleDragEnd = (e) => {\r\n        setDragging(false);\r\n        dragItem.current = null;\r\n        dragItemNode.current = null;\r\n    }\r\n    const getStyles = (item) => {\r\n        if (dragItem.current.grpI === item.grpI && dragItem.current.itemI === item.itemI) {\r\n            return \"dnd-item overlay\"\r\n        }\r\n        return \"dnd-item\"\r\n    }\r\n\r\n    let saver = () => {\r\n        items.forEach(function (file, index) {\r\n            saveBlob(file, index + 'file.jpg');\r\n        });\r\n    };\r\n\r\n    if (items.length) {\r\n        return (\r\n            <div className=\"container dnd\">\r\n                <div className=\"saver-container\">\r\n                    <button onClick={resetDb} className=\"saver_btn-reset\">reset</button>\r\n                    <button onClick={saver} className=\"saver_btn\">Save</button>\r\n                </div>\r\n                {list.map((grp, grpI) => (\r\n                    <div key={grp.title}\r\n                         onTouchStart={dragging && !grp.items.length ? (e) =>\r\n                             handleDragEnter(e, {\r\n                                 grpI,\r\n                                 itemI: 0\r\n                             }) : null}\r\n                         onDragEnter={dragging && !grp.items.length ? (e) =>\r\n                        handleDragEnter(e, {\r\n                            grpI,\r\n                            itemI: 0\r\n                        }) : null}\r\n                         className=\"dnd-container\"\r\n                         style={{height: Math.ceil(items.length / 3) * 313}}>\r\n\r\n                        {grp.items.map((item, itemI) => (\r\n                            <div draggable key={item}\r\n                                 onTouchMoveCapture={(e) => handletDragStart(e, {grpI, itemI})}\r\n                                 onTouchStartCapture={dragging ? (e) => {\r\n                                     handleDragEnter(e, {grpI, itemI})\r\n                                 } : null}\r\n                                 onDragStart={(e) => handletDragStart(e, {grpI, itemI})}\r\n                                 onDragEnter={dragging ? (e) => {\r\n                                     handleDragEnter(e, {grpI, itemI})\r\n                                 } : null}\r\n                                 className={dragging ? getStyles({grpI, itemI}) : \"dnd-item\"}\r\n                                 style={{backgroundImage: `url(${items[item]})`}}>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    } else  {\r\n        return (\r\n            <div className=\"container dnd\">\r\n                <div className=\"saver-container\">\r\n                    <button onClick={resetDb} className=\"saver_btn-reset\">reset</button>\r\n                    <button onClick={saver} className=\"saver_btn\">Save</button>\r\n                </div>\r\n                <div className=\"dnd-container_empty\">\r\n                    <div className=\"dnd-item_empty\">Photo</div>\r\n                    <div className=\"dnd-item_empty\">Photo</div>\r\n                    <div className=\"dnd-item_empty\">Photo</div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DragNDrop;\r\n\r\n",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":8,"nodeType":"65","endLine":8,"endColumn":10,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":6,"column":12,"nodeType":"69","messageId":"70","endLine":6,"endColumn":16},{"ruleId":"63","severity":1,"message":"71","line":25,"column":8,"nodeType":"65","endLine":25,"endColumn":25,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"74","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"75","severity":2,"message":"76","line":6,"column":29,"nodeType":"69","endLine":6,"endColumn":37},{"ruleId":"75","severity":2,"message":"77","line":7,"column":5,"nodeType":"69","endLine":7,"endColumn":20},{"ruleId":"63","severity":1,"message":"71","line":26,"column":8,"nodeType":"65","endLine":26,"endColumn":25,"suggestions":"78"},{"ruleId":"59","replacedBy":"79"},{"ruleId":"61","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["83"],"no-unused-vars","'size' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has a missing dependency: 'fileList'. Either include it or remove the dependency array. If 'setItems' needs the current value of 'fileList', you can also switch to useReducer instead of useState and read 'fileList' in the reducer.",["84"],"'React' is defined but never used.","'Component' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"windowSize\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useLayoutEffect\" is called in function \"windowSize\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.",["85"],["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [props]",{"range":"91","text":"92"},"Update the dependencies array to be: [fileList, fileList.length]",{"range":"93","text":"94"},{"range":"95","text":"94"},[288,290],"[props]",[740,757],"[fileList, fileList.length]",[764,781]]